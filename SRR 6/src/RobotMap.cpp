// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveTrainSpeedController2;
std::shared_ptr<SpeedController> RobotMap::driveTrainSpeedController1;
std::shared_ptr<SpeedController> RobotMap::driveTrainSpeedController3;
std::shared_ptr<SpeedController> RobotMap::driveTrainSpeedController4;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive;
std::shared_ptr<DoubleSolenoid> RobotMap::gearBucketGearDoubleS;
std::shared_ptr<SpeedController> RobotMap::climberSpeedController1;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainSpeedController2.reset(new TalonSRX(1));
    lw->AddActuator("Drive Train", "Speed Controller 2", std::static_pointer_cast<TalonSRX>(driveTrainSpeedController2));
    
    driveTrainSpeedController1.reset(new TalonSRX(0));
    lw->AddActuator("Drive Train", "Speed Controller 1", std::static_pointer_cast<TalonSRX>(driveTrainSpeedController1));
    
    driveTrainSpeedController3.reset(new TalonSRX(2));
    lw->AddActuator("Drive Train", "Speed Controller 3", std::static_pointer_cast<TalonSRX>(driveTrainSpeedController3));
    
    driveTrainSpeedController4.reset(new TalonSRX(3));
    lw->AddActuator("Drive Train", "Speed Controller 4", std::static_pointer_cast<TalonSRX>(driveTrainSpeedController4));
    
    driveTrainRobotDrive.reset(new RobotDrive(driveTrainSpeedController1, driveTrainSpeedController2,
              driveTrainSpeedController3, driveTrainSpeedController4));
    
    driveTrainRobotDrive->SetSafetyEnabled(true);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);

    gearBucketGearDoubleS.reset(new DoubleSolenoid(0, 0, 1));
    lw->AddActuator("Gear Bucket", "Gear Double S", gearBucketGearDoubleS);
    
    climberSpeedController1.reset(new TalonSRX(4));
    lw->AddActuator("Climber", "Speed Controller 1", std::static_pointer_cast<TalonSRX>(climberSpeedController1));
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
